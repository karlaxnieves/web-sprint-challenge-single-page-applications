{"ast":null,"code":"var _jsxFileName = \"/Users/karlanieves/sprintsLambda/web-sprint-challenge-single-page-applications/src/Home.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Form from './Form';\nimport schema from './formSchema';\nimport * as yup from \"yup\";\nimport css from './App.css';\nimport Confirmation from './Confirmation';\nimport { Route, Link, useHistory } from 'react-router-dom';\nconst initialFormValues = {\n  size: \"\",\n  sauce: \"\",\n  pepperoni: false,\n  sausage: false,\n  mushroom: false,\n  onion: false,\n  bacon: false,\n  pineapple: false,\n  olives: false,\n  peppers: false,\n  gluten: false,\n  add: \"\"\n};\nconst initialFormErrors = {\n  size: \"\",\n  sause: \"\",\n  add: \"\"\n};\nconst initialList = [];\nconst initialDisabled = true;\nexport default function Home() {\n  const [list, setList] = useState(initialList);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const getList = () => {\n    axios.get(\"https://reqres.in/\").then(res => {\n      setList(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const postNewList = newList => {\n    axios.post(\"https://reqres.in/\", newList).then(res => {\n      setList([res.data, ...list]);\n      setFormValues(initialFormValues);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const inputChange = (name, value) => {\n    yup.reach(schema, name).validate(value).then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: \"\"\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const submitForm = () => {\n    const newList = {\n      size: formValues.size.trim(),\n      sauce: formValues.sauce.trim(),\n      add: formValues.add.trim(),\n      toppings: [\"pepperoni\", \"sausage\", \"mushroom\", \"onion\", \"bacon\",, \"pineapple\", \"olives\", \"peppers\", \"gluten\"].filter(topping => formValues[topping])\n    };\n    postNewList(newList);\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n  const history = useHistory();\n\n  const routeToShop = () => {\n    history.push('/pizza');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"Pizza\",\n    img: \"\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: routeToShop,\n    className: \"md-button order-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Pizza?\"));\n}","map":{"version":3,"sources":["/Users/karlanieves/sprintsLambda/web-sprint-challenge-single-page-applications/src/Home.js"],"names":["axios","React","useState","useEffect","Form","schema","yup","css","Confirmation","Route","Link","useHistory","initialFormValues","size","sauce","pepperoni","sausage","mushroom","onion","bacon","pineapple","olives","peppers","gluten","add","initialFormErrors","sause","initialList","initialDisabled","Home","list","setList","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","getList","get","then","res","data","catch","err","console","log","postNewList","newList","post","inputChange","name","value","reach","validate","errors","submitForm","trim","toppings","filter","topping","isValid","valid","history","routeToShop","push"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react'\nimport Form from './Form'\nimport schema from './formSchema'\nimport * as yup from \"yup\";\n\nimport css from './App.css'\nimport Confirmation from './Confirmation'\n\nimport { Route, Link, useHistory } from 'react-router-dom'\n\nconst initialFormValues = {\n    size: \"\",\n    sauce: \"\",\n\n    pepperoni: false,\n    sausage: false,\n    mushroom: false,\n    onion: false,\n    bacon: false,\n    pineapple: false,\n    olives: false,\n    peppers: false,\n    gluten: false,\n\n    add: \"\",\n};\n\nconst initialFormErrors = {\n    size: \"\",\n    sause: \"\",\n    add: \"\",\n};\n\nconst initialList = [];\nconst initialDisabled = true;\n\nexport default function Home() {\n    const [list, setList] = useState(initialList)\n    const [formValues, setFormValues] = useState(initialFormValues);\n    const [formErrors, setFormErrors] = useState(initialFormErrors);\n    const [disabled, setDisabled] = useState(initialDisabled);\n\n    const getList = () => {\n        axios\n            .get(\"https://reqres.in/\")\n            .then((res) => {\n                setList(res.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    const postNewList = (newList) => {\n        axios\n            .post(\"https://reqres.in/\", newList)\n            .then((res) => {\n                setList([res.data, ...list]);\n                setFormValues(initialFormValues);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n\n    const inputChange = (name, value) => {\n        yup\n            .reach(schema, name)\n            .validate(value)\n            .then(() => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: \"\",\n                });\n            })\n            .catch((err) => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: err.errors[0],\n                });\n            });\n        setFormValues({\n            ...formValues,\n            [name]: value,\n        });\n    };\n\n\n    const submitForm = () => {\n        const newList = {\n            size: formValues.size.trim(),\n            sauce: formValues.sauce.trim(),\n            add: formValues.add.trim(),\n            toppings: [\"pepperoni\", \"sausage\", \"mushroom\", \"onion\", \"bacon\", , \"pineapple\", \"olives\", \"peppers\", \"gluten\"].filter(\n                (topping) => formValues[topping]\n            ),\n        };\n        postNewList(newList);\n    };\n\n    useEffect(() => {\n        getList();\n    }, []);\n\n\n    useEffect(() => {\n        schema.isValid(formValues).then((valid) => {\n            setDisabled(!valid);\n        });\n    }, [formValues]);\n\n\n    const history = useHistory()\n\n    const routeToShop = () => {\n\n        history.push('/pizza');\n    }\n\n    return (\n        <div className='home-wrapper'>\n            <img\n                className='Pizza'\n                img=\"\"\n                alt=\"\"\n            />\n            <button\n                onClick={routeToShop}\n                className='md-button order-button'\n            >\n                Pizza?\n      </button>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}