{"ast":null,"code":"var _jsxFileName = \"/Users/karlanieves/sprintsLambda/web-sprint-challenge-single-page-applications/src/App.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Form from './Form';\nimport schema from './formSchema';\nimport * as yup from \"yup\";\nimport Home from './Home';\nimport css from './App.css';\nimport Confirmation from './Confirmation';\nimport { Route, Link, Switch } from 'react-router-dom';\nconst initialFormValues = {\n  size: \"\",\n  sauce: \"\",\n  pepperoni: false,\n  sausage: false,\n  mushroom: false,\n  onion: false,\n  bacon: false,\n  pineapple: false,\n  olives: false,\n  peppers: false,\n  gluten: false,\n  add: \"\"\n};\nconst initialFormErrors = {\n  size: \"\",\n  sause: \"\",\n  add: \"\"\n};\nconst initialList = [];\nconst initialDisabled = true;\nexport default function App() {\n  const [list, setList] = useState(initialList);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const getList = () => {\n    axios.get(\"https://reqres.in/\").then(res => {\n      setList(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const postNewList = newList => {\n    axios.post(\"https://reqres.in/\", newList).then(res => {\n      setList([res.data, ...list]);\n      setFormValues(initialFormValues);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const inputChange = (name, value) => {\n    yup.reach(schema, name).validate(value).then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: \"\"\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const submitForm = () => {\n    const newList = {\n      size: formValues.size.trim(),\n      sauce: formValues.sauce.trim(),\n      add: formValues.add.trim(),\n      toppings: [\"pepperoni\", \"sausage\", \"mushroom\", \"onion\", \"bacon\",, \"pineapple\", \"olives\", \"peppers\", \"gluten\"].filter(topping => formValues[topping])\n    };\n    postNewList(newList);\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"store-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Your favortie food, delivered while coding!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/help\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Help\"))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: '/pizza/:itemID',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    items: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/karlanieves/sprintsLambda/web-sprint-challenge-single-page-applications/src/App.js"],"names":["axios","React","useState","useEffect","Form","schema","yup","Home","css","Confirmation","Route","Link","Switch","initialFormValues","size","sauce","pepperoni","sausage","mushroom","onion","bacon","pineapple","olives","peppers","gluten","add","initialFormErrors","sause","initialList","initialDisabled","App","list","setList","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","getList","get","then","res","data","catch","err","console","log","postNewList","newList","post","inputChange","name","value","reach","validate","errors","submitForm","trim","toppings","filter","topping","isValid","valid"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react'\nimport Form from './Form'\nimport schema from './formSchema'\nimport * as yup from \"yup\";\nimport Home from './Home'\nimport css from './App.css'\nimport Confirmation from './Confirmation'\nimport { Route, Link, Switch } from 'react-router-dom'\n\n\nconst initialFormValues = {\n  size: \"\",\n  sauce: \"\",\n\n  pepperoni: false,\n  sausage: false,\n  mushroom: false,\n  onion: false,\n  bacon: false,\n  pineapple: false,\n  olives: false,\n  peppers: false,\n  gluten: false,\n\n  add: \"\",\n};\n\nconst initialFormErrors = {\n  size: \"\",\n  sause: \"\",\n  add: \"\",\n};\n\nconst initialList = [];\nconst initialDisabled = true;\n\nexport default function App() {\n  const [list, setList] = useState(initialList)\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const getList = () => {\n    axios\n      .get(\"https://reqres.in/\")\n      .then((res) => {\n        setList(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const postNewList = (newList) => {\n    axios\n      .post(\"https://reqres.in/\", newList)\n      .then((res) => {\n        setList([res.data, ...list]);\n        setFormValues(initialFormValues);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n\n  const inputChange = (name, value) => {\n    yup\n      .reach(schema, name)\n      .validate(value)\n      .then(() => {\n        setFormErrors({\n          ...formErrors,\n          [name]: \"\",\n        });\n      })\n      .catch((err) => {\n        setFormErrors({\n          ...formErrors,\n          [name]: err.errors[0],\n        });\n      });\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n\n  const submitForm = () => {\n    const newList = {\n      size: formValues.size.trim(),\n      sauce: formValues.sauce.trim(),\n      add: formValues.add.trim(),\n      toppings: [\"pepperoni\", \"sausage\", \"mushroom\", \"onion\", \"bacon\", , \"pineapple\", \"olives\", \"peppers\", \"gluten\"].filter(\n        (topping) => formValues[topping]\n      ),\n    };\n    postNewList(newList);\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n\n  useEffect(() => {\n    schema.isValid(formValues).then((valid) => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n\n\n  return (\n    <div className=\"container\">\n\n      <div className='App'>\n        <nav>\n          <h1 className='store-header'>Your favortie food, delivered while coding!</h1>\n          <div className='nav-links'>\n\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/help\">Help</Link>\n          </div>\n        </nav>\n\n        <Switch>\n          <Route path={'/pizza/:itemID'}>\n            <Form items={list} />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n\n\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}