{"ast":null,"code":"var _jsxFileName = \"/Users/karlanieves/sprintsLambda/web-sprint-challenge-single-page-applications/src/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport Form from './Form';\nimport { Route, Link, Switch, useHistory } from 'react-router-dom';\nconst initialFormValues = {\n  size: \"\",\n  sauce: \"\",\n  pepperoni: false,\n  sausage: false,\n  mushroom: false,\n  onion: false,\n  bacon: false,\n  pineapple: false,\n  olives: false,\n  peppers: false,\n  gluten: false,\n  add: \"\"\n};\nconst initialFormErrors = {\n  size: \"\",\n  sause: \"\",\n  add: \"\"\n};\nconst initialList = [];\nconst initialDisabled = true;\nexport default function Home() {\n  const [list, setList] = useState(initialList);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const getList = () => {\n    axios.get(\"https://reqres.in/\").then(res => {\n      setList(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const postNewList = newList => {\n    axios.post(\"https://reqres.in/\", newList).then(res => {\n      setList([res.data, ...list]);\n      setFormValues(initialFormValues);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const inputChange = (name, value) => {\n    yup.reach(schema, name).validate(value).then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: \"\"\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const submitForm = () => {\n    const newList = {\n      size: formValues.size.trim(),\n      sauce: formValues.sauce.trim(),\n      add: formValues.add.trim(),\n      toppings: [\"pepperoni\", \"sausage\", \"mushroom\", \"onion\", \"bacon\",, \"pineapple\", \"olives\", \"peppers\", \"gluten\"].filter(topping => formValues[topping])\n    };\n    postNewList(newList);\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n  const history = useHistory();\n\n  const routeToShop = () => {\n    history.push('/pizza');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"Pizza\",\n    img: \"\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: routeToShop,\n    className: \"md-button order-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Pizza?\"), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: '/pizza',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    values: formValues,\n    change: inputChange,\n    submit: submitForm,\n    disabled: disabled,\n    errors: formErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/karlanieves/sprintsLambda/web-sprint-challenge-single-page-applications/src/Home.js"],"names":["React","useState","useEffect","Form","Route","Link","Switch","useHistory","initialFormValues","size","sauce","pepperoni","sausage","mushroom","onion","bacon","pineapple","olives","peppers","gluten","add","initialFormErrors","sause","initialList","initialDisabled","Home","list","setList","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","getList","axios","get","then","res","data","catch","err","console","log","postNewList","newList","post","inputChange","name","value","yup","reach","schema","validate","errors","submitForm","trim","toppings","filter","topping","isValid","valid","history","routeToShop","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Form from './Form'\nimport { Route, Link, Switch, useHistory } from 'react-router-dom'\n\n\nconst initialFormValues = {\n    size: \"\",\n    sauce: \"\",\n\n    pepperoni: false,\n    sausage: false,\n    mushroom: false,\n    onion: false,\n    bacon: false,\n    pineapple: false,\n    olives: false,\n    peppers: false,\n    gluten: false,\n\n    add: \"\",\n};\n\nconst initialFormErrors = {\n    size: \"\",\n    sause: \"\",\n    add: \"\",\n};\n\nconst initialList = [];\nconst initialDisabled = true;\n\nexport default function Home() {\n    const [list, setList] = useState(initialList)\n    const [formValues, setFormValues] = useState(initialFormValues);\n    const [formErrors, setFormErrors] = useState(initialFormErrors);\n    const [disabled, setDisabled] = useState(initialDisabled);\n\n    const getList = () => {\n        axios\n            .get(\"https://reqres.in/\")\n            .then((res) => {\n                setList(res.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    const postNewList = (newList) => {\n        axios\n            .post(\"https://reqres.in/\", newList)\n            .then((res) => {\n                setList([res.data, ...list]);\n                setFormValues(initialFormValues);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n\n    const inputChange = (name, value) => {\n        yup\n            .reach(schema, name)\n            .validate(value)\n            .then(() => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: \"\",\n                });\n            })\n            .catch((err) => {\n                setFormErrors({\n                    ...formErrors,\n                    [name]: err.errors[0],\n                });\n            });\n        setFormValues({\n            ...formValues,\n            [name]: value,\n        });\n    };\n\n\n    const submitForm = () => {\n        const newList = {\n            size: formValues.size.trim(),\n            sauce: formValues.sauce.trim(),\n            add: formValues.add.trim(),\n            toppings: [\"pepperoni\", \"sausage\", \"mushroom\", \"onion\", \"bacon\", , \"pineapple\", \"olives\", \"peppers\", \"gluten\"].filter(\n                (topping) => formValues[topping]\n            ),\n        };\n        postNewList(newList);\n    };\n\n    useEffect(() => {\n        getList();\n    }, []);\n\n\n    useEffect(() => {\n        schema.isValid(formValues).then((valid) => {\n            setDisabled(!valid);\n        });\n    }, [formValues]);\n\n\n\n    const history = useHistory()\n\n    const routeToShop = () => {\n\n        history.push('/pizza');\n    }\n\n    return (\n        <div className='home-wrapper'>\n            <img\n                className='Pizza'\n                img=\"\"\n                alt=\"\"\n            />\n            <button\n                onClick={routeToShop}\n                className='md-button order-button'\n            >\n                Pizza?\n      </button>\n\n            <Switch>\n                <Route path={'/pizza'}>\n                    <Form values={formValues}\n                        change={inputChange}\n                        submit={submitForm}\n                        disabled={disabled}\n                        errors={formErrors} />\n                </Route>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}