{"ast":null,"code":"var _jsxFileName = \"/Users/karlanieves/sprintsLambda/web-sprint-challenge-single-page-applications/src/App.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport Confirmation from './Confirmation';\nimport Form from './Form';\nimport Home from './Home';\nimport schema from './formSchema';\nimport * as yup from \"yup\";\nconst initialFormValue = {\n  size: \"\",\n  sauce: \"\",\n  pepperoni: false,\n  sausage: false,\n  mushroom: false,\n  onion: false,\n  bacon: false,\n  peinapple: false,\n  olives: false,\n  peppers: false,\n  add: \"\"\n};\nconst initialFormErrors = {\n  size: \"\",\n  sause: \"\",\n  add: \"\"\n};\nconst initialDisabled = true;\nexport default function App() {\n  const [list, setList] = useState([]);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const inputChange = (name, value) => {\n    yup.reach(schema, name);\n    setFormErrors({ ...formErrors,\n      [name]: \"\"\n    });\n\n    const formSubmit = () => {\n      const newList = {\n        size: formValues.size.trim(),\n        sauce: formValues.sauce.trim(),\n        add: formValues.add.trim(),\n        toppings: [\"pepperoni\", \"sausage\", \"mushroom\", \"onion\", \"bacon\",, \"pineapple\", \"olives\", \"peppers\", \"gluten\"].filter(topping => formValues[topping])\n      };\n      postNewList(newList);\n    };\n\n    useEffect(() => {\n      schema.isValid(formValues).then(valid => {\n        setDisabled(!valid);\n      });\n    }, [formValues]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Friends App\")), /*#__PURE__*/React.createElement(FriendForm, {\n      values: formValues,\n      change: inputChange,\n      submit: formSubmit,\n      disabled: disabled,\n      errors: formErrors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), friends.map(friend => {\n      return /*#__PURE__*/React.createElement(Friend, {\n        key: friend.id,\n        details: friend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 18\n        }\n      });\n    }));\n  };\n}","map":{"version":3,"sources":["/Users/karlanieves/sprintsLambda/web-sprint-challenge-single-page-applications/src/App.js"],"names":["axios","React","useState","useEffect","Route","Link","Switch","Confirmation","Form","Home","schema","yup","initialFormValue","size","sauce","pepperoni","sausage","mushroom","onion","bacon","peinapple","olives","peppers","add","initialFormErrors","sause","initialDisabled","App","list","setList","formValues","setFormValues","initialFormValues","formErrors","setFormErrors","disabled","setDisabled","inputChange","name","value","reach","formSubmit","newList","trim","toppings","filter","topping","postNewList","isValid","then","valid","friends","map","friend","id"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react'\nimport { Route, Link, Switch } from 'react-router-dom'\nimport Confirmation from './Confirmation'\nimport Form from './Form'\nimport Home from './Home'\nimport schema from './formSchema'\nimport * as yup from \"yup\";\n\n\nconst initialFormValue = {\n  size: \"\",\n  sauce: \"\",\n\n  pepperoni: false,\n  sausage: false,\n  mushroom: false,\n  onion: false,\n  bacon: false,\n  peinapple: false,\n  olives: false,\n  peppers: false,\n\n  add: \"\",\n};\n\nconst initialFormErrors = {\n  size: \"\",\n  sause: \"\",\n  add: \"\",\n};\n\nconst initialDisabled = true;\n\nexport default function App() {\n  const [list, setList] = useState([])\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n\n  const inputChange = (name, value) => {\n    yup\n      .reach(schema, name)\n    setFormErrors({\n      ...formErrors,\n      [name]: \"\",\n    });\n\n\n\n    const formSubmit = () => {\n      const newList = {\n        size: formValues.size.trim(),\n        sauce: formValues.sauce.trim(),\n        add: formValues.add.trim(),\n        toppings: [\"pepperoni\", \"sausage\", \"mushroom\", \"onion\", \"bacon\", , \"pineapple\", \"olives\", \"peppers\", \"gluten\"].filter(\n          (topping) => formValues[topping]\n        ),\n      };\n      postNewList(newList);\n    };\n\n    useEffect(() => {\n      schema.isValid(formValues).then((valid) => {\n        setDisabled(!valid);\n      });\n    }, [formValues]);\n\n\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Friends App</h1>\n        </header>\n\n        <FriendForm\n          values={formValues}\n          change={inputChange}\n          submit={formSubmit}\n          disabled={disabled}\n          errors={formErrors}\n        />\n\n        {friends.map((friend) => {\n          return <Friend key={friend.id} details={friend} />;\n        })}\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}